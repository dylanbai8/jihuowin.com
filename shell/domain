# 获取当前路径
$currentPath = (Get-Location).Path
# 输入文件路径
$inputFile = "domain.txt"
# 输出文件路径
$outputFile = "cloudflare_import.txt"

# 提示信息
Write-Host "===> $currentPath\$inputFile"
Write-Host "===> $currentPath\$outputFile"
Write-Host "===> Confirm the path and press any key ..."
[System.Console]::ReadKey() > $null

# 检查域名文件是否存在
if (-not (Test-Path -Path $inputFile)) {
    Write-Host "===> Error! $currentPath\$inputFile"
    exit
}

# 读取域名列表
$domains = Get-Content -Path "$inputFile"

# 清空输出文件内容
Clear-Content -Path $outputFile -ErrorAction SilentlyContinue

# 遍历每个域名
foreach ($domain in $domains) {
    # 获取域名解析的IP地址
    try {
        $ipAddresses = [System.Net.Dns]::GetHostAddresses($domain) | Where-Object { $_.AddressFamily -eq 'InterNetwork' }
    } catch {
        Write-Host "Parsing Error: $domain"
        continue
    }

    # 检查每个IP地址的端口
    foreach ($ip in $ipAddresses) {
        $tcpConnection = New-Object System.Net.Sockets.TcpClient
        try {
            # 尝试连接1688端口
            $tcpConnection.Connect($ip, 1688)
            if ($tcpConnection.Connected) {
                # 如果连接成功，将IP写入输出文件
                $ipAddress = $ip.ToString()
                Add-Content -Path $outputFile -Value "kms.jihuowin.com.	1	IN	A	$ipAddress"
                Write-Host "Working! $ipAddress :1688"
            }
        } catch {
            Write-Host "Error! $ipAddress :1688"
        } finally {
            # 关闭连接
            $tcpConnection.Close()
        }
    }
}

Write-Host "===> All done ..."
Write-Host "===> $currentPath$outputFile"
