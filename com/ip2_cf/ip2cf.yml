name: Cloudflare域名解析

on:
  # 手动触发工作流
  workflow_dispatch:
  
  # 每周运行一次，星期一 00:00 运行（可根据需求调整时间）
  schedule:
    - cron: '0 0 * * 1'

jobs:
  check-ips:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y curl jq netcat dos2unix

    - name: Ensure ip.txt has Unix line endings
      run: |
        dos2unix ip.txt || true

    - name: Read and check IPs
      id: check_ips
      run: |
        while IFS= read -r ip; do
          # Trim任何前导/尾随空白字符
          ip=$(echo "$ip" | tr -d '\r\n ')
          
          # 跳过空行
          if [ -z "$ip" ]; then
            continue
          fi

          echo "Checking IP: $ip"

          # 使用nc命令检查IP 1688端口是否可达，设置超时时间为5秒
          if nc -zv -w 5 "$ip" 1688; then
            echo "IP $ip: Port 1688 is open."

            # 端口正常，获取DNS记录ID 判断记录是否已存在
            echo "Fetching DNS record for IP $ip..."
            response=$(curl -s -X GET "https://api.cloudflare.com/client/v4/zones/$CF_ZONE_ID/dns_records?type=A&name=$CF_DOMAIN&content=$ip" \
              -H "Authorization: Bearer $CF_API_TOKEN" \
              -H "Content-Type: application/json")

            echo "Fetch DNS record response: $response"

            record_id=$(echo "$response" | jq -r '.result[0].id')

            if [ "$record_id" != "null" ] && [ -n "$record_id" ]; then
              # 记录已存在，跳过添加
              echo "DNS record for $ip already exists!"
            else
              # 记录不存在，添加A记录到Cloudflare
              echo "No DNS record found for IP $ip"
              add_response=$(curl -s -X POST "https://api.cloudflare.com/client/v4/zones/$CF_ZONE_ID/dns_records" \
                -H "Authorization: Bearer $CF_API_TOKEN" \
                -H "Content-Type: application/json" \
                --data '{"type":"A","name":"'"$CF_DOMAIN"'","content":"'"$ip"'","ttl":120,"proxied":false}')
              echo "Add A record response: $add_response"
            fi

          else

            echo "IP $ip: Port 1688 is not open."
            # 端口异常，获取DNS记录ID 判断记录是否已存在
            echo "Fetching DNS record for IP $ip..."
            response=$(curl -s -X GET "https://api.cloudflare.com/client/v4/zones/$CF_ZONE_ID/dns_records?type=A&name=$CF_DOMAIN&content=$ip" \
              -H "Authorization: Bearer $CF_API_TOKEN" \
              -H "Content-Type: application/json")

            echo "Fetch DNS record response: $response"

            record_id=$(echo "$response" | jq -r '.result[0].id')

            if [ "$record_id" != "null" ] && [ -n "$record_id" ]; then
              # 记录存在，从Cloudflare删除记录
              echo "Deleting DNS record with ID: $record_id"
              delete_response=$(curl -s -X DELETE "https://api.cloudflare.com/client/v4/zones/$CF_ZONE_ID/dns_records/$record_id" \
                -H "Authorization: Bearer $CF_API_TOKEN" \
                -H "Content-Type: application/json")
              echo "Delete DNS record response: $delete_response"
              echo "Deleted DNS record for $ip"
            else
              # 记录不存在，跳过删除
              echo "No DNS record found for IP $ip"
            fi

          fi
        done < ip.txt

    env:
      CF_API_TOKEN: ${{ secrets.CF_API_TOKEN }}
      CF_ZONE_ID: ${{ secrets.CF_ZONE_ID }}
      CF_DOMAIN: ${{ secrets.CF_DOMAIN }}
